name: Front Actions
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Init
        uses: tkt-actions/aws-sam-cli@v1
      - run: |
          export "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
          export "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}"
          echo "export AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> variables.env
          echo "export BUILD_USER_POOL_ID=$(aws ssm get-parameter --name /cosmos/${GITHUB_REF##*/}/cognito/client/userpool/id --region ${AWS_DEFAULT_REGION} --query 'Parameter.Value' --output text)" >> variables.env
          echo "export BUILD_USER_POOL_CLIENT_ID=$(aws ssm get-parameter --name /cosmos/${GITHUB_REF##*/}/cognito/client/userpool/client_id --region ${AWS_DEFAULT_REGION} --query 'Parameter.Value' --output text)" >> variables.env
          echo "export S3_BUCKET=$(aws ssm get-parameter --name /cosmos/${GITHUB_REF##*/}/s3/cosmos-front/id --region ${AWS_DEFAULT_REGION} --query 'Parameter.Value' --output text)" >> variables.env
          echo "export CLOUDFRONT_ID=$(aws ssm get-parameter --name /cosmos/${GITHUB_REF##*/}/cloudfront/id --region ${AWS_DEFAULT_REGION} --query 'Parameter.Value' --output text)" >> variables.env
          cat variables.env

      - name: Build
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - run: |
          source variables.env
          sed "s/BUILD_USER_POOL_ID/${BUILD_USER_POOL_ID}/g; s/BUILD_REGION/${AWS_DEFAULT_REGION}/g; s/BUILD_USER_POOL_CLIENT_ID/${BUILD_USER_POOL_CLIENT_ID}/g" .env.template > .env
          npm install
          npm run build
      
      - name: Deploy
        uses: tkt-actions/aws-sam-cli@v1
      - run: |
          export "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
          export "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          source variables.env
          aws s3 rm s3://${S3_BUCKET}/ --recursive
          aws s3 cp ./build/ s3://${S3_BUCKET}/ --recursive
          aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths "/*"

